// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: proto/server_status.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query  string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"` // ip-api,
	Continent  string `protobuf:"bytes,3,opt,name=continent,proto3" json:"continent,omitempty"`
	Country    string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	RegionName string `protobuf:"bytes,5,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	City       string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Isp    string `protobuf:"bytes,7,opt,name=isp,proto3" json:"isp,omitempty"`
	Org    string `protobuf:"bytes,8,opt,name=org,proto3" json:"org,omitempty"`
	As     string `protobuf:"bytes,9,opt,name=as,proto3" json:"as,omitempty"`
	Asname string `protobuf:"bytes,10,opt,name=asname,proto3" json:"asname,omitempty"`
	Lat      float64 `protobuf:"fixed64,11,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon      float64 `protobuf:"fixed64,12,opt,name=lon,proto3" json:"lon,omitempty"`
	Timezone string  `protobuf:"bytes,13,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *IpInfo) Reset() {
	*x = IpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IpInfo) ProtoMessage() {}

func (x *IpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IpInfo.ProtoReflect.Descriptor instead.
func (*IpInfo) Descriptor() ([]byte, []int) {
	return file_proto_server_status_proto_rawDescGZIP(), []int{0}
}

func (x *IpInfo) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *IpInfo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *IpInfo) GetContinent() string {
	if x != nil {
		return x.Continent
	}
	return ""
}

func (x *IpInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *IpInfo) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *IpInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *IpInfo) GetIsp() string {
	if x != nil {
		return x.Isp
	}
	return ""
}

func (x *IpInfo) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *IpInfo) GetAs() string {
	if x != nil {
		return x.As
	}
	return ""
}

func (x *IpInfo) GetAsname() string {
	if x != nil {
		return x.Asname
	}
	return ""
}

func (x *IpInfo) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *IpInfo) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *IpInfo) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type SysInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	OsName        string `protobuf:"bytes,3,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	OsArch        string `protobuf:"bytes,4,opt,name=os_arch,json=osArch,proto3" json:"os_arch,omitempty"`
	OsFamily      string `protobuf:"bytes,5,opt,name=os_family,json=osFamily,proto3" json:"os_family,omitempty"`
	OsRelease     string `protobuf:"bytes,6,opt,name=os_release,json=osRelease,proto3" json:"os_release,omitempty"`
	KernelVersion string `protobuf:"bytes,7,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	CpuNum        uint32 `protobuf:"varint,8,opt,name=cpu_num,json=cpuNum,proto3" json:"cpu_num,omitempty"`
	CpuBrand      string `protobuf:"bytes,9,opt,name=cpu_brand,json=cpuBrand,proto3" json:"cpu_brand,omitempty"`
	CpuVenderId   string `protobuf:"bytes,10,opt,name=cpu_vender_id,json=cpuVenderId,proto3" json:"cpu_vender_id,omitempty"`
	HostName      string `protobuf:"bytes,11,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
}

func (x *SysInfo) Reset() {
	*x = SysInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_status_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysInfo) ProtoMessage() {}

func (x *SysInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_status_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysInfo.ProtoReflect.Descriptor instead.
func (*SysInfo) Descriptor() ([]byte, []int) {
	return file_proto_server_status_proto_rawDescGZIP(), []int{1}
}

func (x *SysInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SysInfo) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *SysInfo) GetOsArch() string {
	if x != nil {
		return x.OsArch
	}
	return ""
}

func (x *SysInfo) GetOsFamily() string {
	if x != nil {
		return x.OsFamily
	}
	return ""
}

func (x *SysInfo) GetOsRelease() string {
	if x != nil {
		return x.OsRelease
	}
	return ""
}

func (x *SysInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *SysInfo) GetCpuNum() uint32 {
	if x != nil {
		return x.CpuNum
	}
	return 0
}

func (x *SysInfo) GetCpuBrand() string {
	if x != nil {
		return x.CpuBrand
	}
	return ""
}

func (x *SysInfo) GetCpuVenderId() string {
	if x != nil {
		return x.CpuVenderId
	}
	return ""
}

func (x *SysInfo) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

type DiskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MountPoint string `protobuf:"bytes,2,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
	FileSystem string `protobuf:"bytes,3,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
	Total      uint64 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Used       uint64 `protobuf:"varint,5,opt,name=used,proto3" json:"used,omitempty"`
	Free       uint64 `protobuf:"varint,6,opt,name=free,proto3" json:"free,omitempty"`
}

func (x *DiskInfo) Reset() {
	*x = DiskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_status_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskInfo) ProtoMessage() {}

func (x *DiskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_status_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskInfo.ProtoReflect.Descriptor instead.
func (*DiskInfo) Descriptor() ([]byte, []int) {
	return file_proto_server_status_proto_rawDescGZIP(), []int{2}
}

func (x *DiskInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiskInfo) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *DiskInfo) GetFileSystem() string {
	if x != nil {
		return x.FileSystem
	}
	return ""
}

func (x *DiskInfo) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DiskInfo) GetUsed() uint64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *DiskInfo) GetFree() uint64 {
	if x != nil {
		return x.Free
	}
	return 0
}

type StatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version  string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	LatestTs uint64 `protobuf:"varint,3,opt,name=latest_ts,json=latestTs,proto3" json:"latest_ts,omitempty"`
	Frame    string `protobuf:"bytes,4,opt,name=frame,proto3" json:"frame,omitempty"`
	Vnstat   bool   `protobuf:"varint,6,opt,name=vnstat,proto3" json:"vnstat,omitempty"`
	Online4  bool   `protobuf:"varint,7,opt,name=online4,proto3" json:"online4,omitempty"`
	Online6  bool   `protobuf:"varint,8,opt,name=online6,proto3" json:"online6,omitempty"`
	Uptime   uint64 `protobuf:"varint,9,opt,name=uptime,proto3" json:"uptime,omitempty"`
	// load
	Load_1  float64 `protobuf:"fixed64,10,opt,name=load_1,json=load1,proto3" json:"load_1,omitempty"`
	Load_5  float64 `protobuf:"fixed64,11,opt,name=load_5,json=load5,proto3" json:"load_5,omitempty"`
	Load_15 float64 `protobuf:"fixed64,12,opt,name=load_15,json=load15,proto3" json:"load_15,omitempty"`
	Ping_10010 float64 `protobuf:"fixed64,13,opt,name=ping_10010,json=ping10010,proto3" json:"ping_10010,omitempty"`
	Ping_189   float64 `protobuf:"fixed64,14,opt,name=ping_189,json=ping189,proto3" json:"ping_189,omitempty"`
	Ping_10086 float64 `protobuf:"fixed64,15,opt,name=ping_10086,json=ping10086,proto3" json:"ping_10086,omitempty"`
	Time_10010 float64 `protobuf:"fixed64,16,opt,name=time_10010,json=time10010,proto3" json:"time_10010,omitempty"`
	Time_189   float64 `protobuf:"fixed64,17,opt,name=time_189,json=time189,proto3" json:"time_189,omitempty"`
	Time_10086 float64 `protobuf:"fixed64,18,opt,name=time_10086,json=time10086,proto3" json:"time_10086,omitempty"`
	// t/u/p/d
	Tcp     uint32 `protobuf:"varint,19,opt,name=tcp,proto3" json:"tcp,omitempty"`
	Udp     uint32 `protobuf:"varint,20,opt,name=udp,proto3" json:"udp,omitempty"`
	Process uint32 `protobuf:"varint,21,opt,name=process,proto3" json:"process,omitempty"`
	Thread  uint32 `protobuf:"varint,22,opt,name=thread,proto3" json:"thread,omitempty"`
	// netowrk
	NetworkRx      uint64 `protobuf:"varint,23,opt,name=network_rx,json=networkRx,proto3" json:"network_rx,omitempty"`
	NetworkTx      uint64 `protobuf:"varint,24,opt,name=network_tx,json=networkTx,proto3" json:"network_tx,omitempty"`
	NetworkIn      uint64 `protobuf:"varint,25,opt,name=network_in,json=networkIn,proto3" json:"network_in,omitempty"`
	NetworkOut     uint64 `protobuf:"varint,26,opt,name=network_out,json=networkOut,proto3" json:"network_out,omitempty"`
	LastNetworkIn  uint64 `protobuf:"varint,27,opt,name=last_network_in,json=lastNetworkIn,proto3" json:"last_network_in,omitempty"`
	LastNetworkOut uint64 `protobuf:"varint,28,opt,name=last_network_out,json=lastNetworkOut,proto3" json:"last_network_out,omitempty"`
	Cpu         float64  `protobuf:"fixed64,29,opt,name=cpu,proto3" json:"cpu,omitempty"`
	MemoryTotal uint64   `protobuf:"varint,30,opt,name=memory_total,json=memoryTotal,proto3" json:"memory_total,omitempty"`
	MemoryUsed  uint64   `protobuf:"varint,31,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"`
	SwapTotal   uint64   `protobuf:"varint,32,opt,name=swap_total,json=swapTotal,proto3" json:"swap_total,omitempty"`
	SwapUsed    uint64   `protobuf:"varint,33,opt,name=swap_used,json=swapUsed,proto3" json:"swap_used,omitempty"`
	HddTotal    uint64   `protobuf:"varint,34,opt,name=hdd_total,json=hddTotal,proto3" json:"hdd_total,omitempty"`
	HddUsed     uint64   `protobuf:"varint,35,opt,name=hdd_used,json=hddUsed,proto3" json:"hdd_used,omitempty"`
	Custom      *string  `protobuf:"bytes,36,opt,name=custom,proto3,oneof" json:"custom,omitempty"`
	SysInfo     *SysInfo `protobuf:"bytes,37,opt,name=sys_info,json=sysInfo,proto3,oneof" json:"sys_info,omitempty"`
	IpInfo      *IpInfo  `protobuf:"bytes,38,opt,name=ip_info,json=ipInfo,proto3,oneof" json:"ip_info,omitempty"`
	// group
	Gid      string `protobuf:"bytes,39,opt,name=gid,proto3" json:"gid,omitempty"`
	Alias    string `protobuf:"bytes,40,opt,name=alias,proto3" json:"alias,omitempty"`
	Weight   uint64 `protobuf:"varint,41,opt,name=weight,proto3" json:"weight,omitempty"`
	Type     string `protobuf:"bytes,42,opt,name=type,proto3" json:"type,omitempty"`
	Location string `protobuf:"bytes,43,opt,name=location,proto3" json:"location,omitempty"`
	Notify   bool   `protobuf:"varint,44,opt,name=notify,proto3" json:"notify,omitempty"`
	// false: KiB (1024), true: KB (1000)
	Si    bool        `protobuf:"varint,45,opt,name=si,proto3" json:"si,omitempty"`
	Disks []*DiskInfo `protobuf:"bytes,46,rep,name=disks,proto3" json:"disks,omitempty"`
}

func (x *StatRequest) Reset() {
	*x = StatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_status_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRequest) ProtoMessage() {}

func (x *StatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_status_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRequest.ProtoReflect.Descriptor instead.
func (*StatRequest) Descriptor() ([]byte, []int) {
	return file_proto_server_status_proto_rawDescGZIP(), []int{3}
}

func (x *StatRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *StatRequest) GetLatestTs() uint64 {
	if x != nil {
		return x.LatestTs
	}
	return 0
}

func (x *StatRequest) GetFrame() string {
	if x != nil {
		return x.Frame
	}
	return ""
}

func (x *StatRequest) GetVnstat() bool {
	if x != nil {
		return x.Vnstat
	}
	return false
}

func (x *StatRequest) GetOnline4() bool {
	if x != nil {
		return x.Online4
	}
	return false
}

func (x *StatRequest) GetOnline6() bool {
	if x != nil {
		return x.Online6
	}
	return false
}

func (x *StatRequest) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *StatRequest) GetLoad_1() float64 {
	if x != nil {
		return x.Load_1
	}
	return 0
}

func (x *StatRequest) GetLoad_5() float64 {
	if x != nil {
		return x.Load_5
	}
	return 0
}

func (x *StatRequest) GetLoad_15() float64 {
	if x != nil {
		return x.Load_15
	}
	return 0
}

func (x *StatRequest) GetPing_10010() float64 {
	if x != nil {
		return x.Ping_10010
	}
	return 0
}

func (x *StatRequest) GetPing_189() float64 {
	if x != nil {
		return x.Ping_189
	}
	return 0
}

func (x *StatRequest) GetPing_10086() float64 {
	if x != nil {
		return x.Ping_10086
	}
	return 0
}

func (x *StatRequest) GetTime_10010() float64 {
	if x != nil {
		return x.Time_10010
	}
	return 0
}

func (x *StatRequest) GetTime_189() float64 {
	if x != nil {
		return x.Time_189
	}
	return 0
}

func (x *StatRequest) GetTime_10086() float64 {
	if x != nil {
		return x.Time_10086
	}
	return 0
}

func (x *StatRequest) GetTcp() uint32 {
	if x != nil {
		return x.Tcp
	}
	return 0
}

func (x *StatRequest) GetUdp() uint32 {
	if x != nil {
		return x.Udp
	}
	return 0
}

func (x *StatRequest) GetProcess() uint32 {
	if x != nil {
		return x.Process
	}
	return 0
}

func (x *StatRequest) GetThread() uint32 {
	if x != nil {
		return x.Thread
	}
	return 0
}

func (x *StatRequest) GetNetworkRx() uint64 {
	if x != nil {
		return x.NetworkRx
	}
	return 0
}

func (x *StatRequest) GetNetworkTx() uint64 {
	if x != nil {
		return x.NetworkTx
	}
	return 0
}

func (x *StatRequest) GetNetworkIn() uint64 {
	if x != nil {
		return x.NetworkIn
	}
	return 0
}

func (x *StatRequest) GetNetworkOut() uint64 {
	if x != nil {
		return x.NetworkOut
	}
	return 0
}

func (x *StatRequest) GetLastNetworkIn() uint64 {
	if x != nil {
		return x.LastNetworkIn
	}
	return 0
}

func (x *StatRequest) GetLastNetworkOut() uint64 {
	if x != nil {
		return x.LastNetworkOut
	}
	return 0
}

func (x *StatRequest) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *StatRequest) GetMemoryTotal() uint64 {
	if x != nil {
		return x.MemoryTotal
	}
	return 0
}

func (x *StatRequest) GetMemoryUsed() uint64 {
	if x != nil {
		return x.MemoryUsed
	}
	return 0
}

func (x *StatRequest) GetSwapTotal() uint64 {
	if x != nil {
		return x.SwapTotal
	}
	return 0
}

func (x *StatRequest) GetSwapUsed() uint64 {
	if x != nil {
		return x.SwapUsed
	}
	return 0
}

func (x *StatRequest) GetHddTotal() uint64 {
	if x != nil {
		return x.HddTotal
	}
	return 0
}

func (x *StatRequest) GetHddUsed() uint64 {
	if x != nil {
		return x.HddUsed
	}
	return 0
}

func (x *StatRequest) GetCustom() string {
	if x != nil && x.Custom != nil {
		return *x.Custom
	}
	return ""
}

func (x *StatRequest) GetSysInfo() *SysInfo {
	if x != nil {
		return x.SysInfo
	}
	return nil
}

func (x *StatRequest) GetIpInfo() *IpInfo {
	if x != nil {
		return x.IpInfo
	}
	return nil
}

func (x *StatRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *StatRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *StatRequest) GetWeight() uint64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *StatRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StatRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *StatRequest) GetNotify() bool {
	if x != nil {
		return x.Notify
	}
	return false
}

func (x *StatRequest) GetSi() bool {
	if x != nil {
		return x.Si
	}
	return false
}

func (x *StatRequest) GetDisks() []*DiskInfo {
	if x != nil {
		return x.Disks
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_status_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_status_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_server_status_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_server_status_proto protoreflect.FileDescriptor

var file_proto_server_status_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xaf, 0x02, 0x0a, 0x06, 0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x73, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x61, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x73, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x22, 0xc3, 0x02, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73, 0x41, 0x72, 0x63, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x73, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x73, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x73, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x70, 0x75, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x70, 0x75, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x70, 0x75, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x70, 0x75,
	0x5f, 0x76, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x70, 0x75, 0x56, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x08, 0x44,
	0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x22, 0x98, 0x0a, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x54, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6e, 0x73, 0x74, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x6e,
	0x73, 0x74, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x34, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x34, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x36, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x35, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x61, 0x64, 0x35, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x31, 0x35, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x6c, 0x6f, 0x61, 0x64, 0x31, 0x35, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x31, 0x30, 0x30, 0x31, 0x30, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x69, 0x6e,
	0x67, 0x31, 0x30, 0x30, 0x31, 0x30, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x31,
	0x38, 0x39, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x69, 0x6e, 0x67, 0x31, 0x38,
	0x39, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x31, 0x30, 0x30, 0x38, 0x36, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x69, 0x6e, 0x67, 0x31, 0x30, 0x30, 0x38, 0x36,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x31, 0x30, 0x30, 0x31, 0x30, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x30, 0x30, 0x31, 0x30, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x31, 0x38, 0x39, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x31, 0x38, 0x39, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x31, 0x30, 0x30, 0x38, 0x36, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x31, 0x30, 0x30, 0x38, 0x36, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x63, 0x70,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x63, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x64, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x64, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x72, 0x78, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x78, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x78, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x78, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x75, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x6e,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x75, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x63, 0x70,
	0x75, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x20, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x77, 0x61, 0x70, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x55, 0x73, 0x65,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x64, 0x64, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x68, 0x64, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x68, 0x64, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x68, 0x64, 0x64, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x79, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x07, 0x73, 0x79, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x02, 0x52, 0x06, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x2c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x73,
	0x69, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x73, 0x69, 0x12, 0x25, 0x0a, 0x05, 0x64,
	0x69, 0x73, 0x6b, 0x73, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x64, 0x69, 0x73,
	0x6b, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69,
	0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0x3d, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2d, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_server_status_proto_rawDescOnce sync.Once
	file_proto_server_status_proto_rawDescData = file_proto_server_status_proto_rawDesc
)

func file_proto_server_status_proto_rawDescGZIP() []byte {
	file_proto_server_status_proto_rawDescOnce.Do(func() {
		file_proto_server_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_server_status_proto_rawDescData)
	})
	return file_proto_server_status_proto_rawDescData
}

var file_proto_server_status_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_server_status_proto_goTypes = []any{
	(*IpInfo)(nil),      // 0: proto.IpInfo
	(*SysInfo)(nil),     // 1: proto.SysInfo
	(*DiskInfo)(nil),    // 2: proto.DiskInfo
	(*StatRequest)(nil), // 3: proto.StatRequest
	(*Response)(nil),    // 4: proto.Response
}
var file_proto_server_status_proto_depIdxs = []int32{
	1, // 0: proto.StatRequest.sys_info:type_name -> proto.SysInfo
	0, // 1: proto.StatRequest.ip_info:type_name -> proto.IpInfo
	2, // 2: proto.StatRequest.disks:type_name -> proto.DiskInfo
	3, // 3: proto.ServerStatus.Report:input_type -> proto.StatRequest
	4, // 4: proto.ServerStatus.Report:output_type -> proto.Response
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_server_status_proto_init() }
func file_proto_server_status_proto_init() {
	if File_proto_server_status_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_server_status_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*IpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_status_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SysInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_status_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DiskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_status_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*StatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_status_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_server_status_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_server_status_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_server_status_proto_goTypes,
		DependencyIndexes: file_proto_server_status_proto_depIdxs,
		MessageInfos:      file_proto_server_status_proto_msgTypes,
	}.Build()
	File_proto_server_status_proto = out.File
	file_proto_server_status_proto_rawDesc = nil
	file_proto_server_status_proto_goTypes = nil
	file_proto_server_status_proto_depIdxs = nil
}
